@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix prov: <http://www.w3.org/ns/prov#> .

@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix voaf: <http://purl.org/vocommons/voaf#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix cc: <http://creativecommons.org/ns#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix seas: <https://w3id.org/seas/> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix brick: <https://brickschema.org/schema/1.1/Brick#> .
@prefix plt: <https://w3id.org/platoon/>.
@prefix oema: <http://www.purl.org/oema/ontologynetwork#> .
@prefix s4bldg: <https://w3id.org/def/saref4bldg#> .
@prefix cim: <http://www.iec.ch/TC57/CIM#> .
@prefix gn: <https://www.geonames.org/ontology#> .
@prefix sch: <https://schema.org/> .
@prefix wgs84_pos: <http://www.w3.org/2003/01/geo/wgs84_pos#> .

@prefix unit: <http://www.qudt.org/2.1/vocab/unit/> .
@prefix qudt: <http://www.qudt.org/2.1/schema/qudt/> .
@prefix ontowind: <http://www.semanticweb.org/ontologies/2011/9/Ontology1318785573683.owl#> .
@prefix saref: <https://saref.etsi.org/core/> .
@prefix gn: <https://www.geonames.org/ontology#> .


@base <https://w3id.org/platoon/>.

<#PLATOON_DB> a d2rq:Database;
  d2rq:jdbcDSN "paltoon_db"; # the "jbdc:mysql:// part is ignored
  d2rq:jdbcDriver "com.mysql.cj.jdbc.Driver"; # this is ignored
  d2rq:username "root";
  d2rq:password "1234" .

<#PUPIN_LocationsMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "daily_weather_forecasts"
    ];

    rr:subjectMap [
      rr:template "http://platoon.eu/Location/{lat}_{lon}";
      rr:class sch:Location, gn:Feature, seas:FeatureOfInterest
    ];

    rr:predicateObjectMap [
      rr:predicate wgs84_pos:lat ;
      rr:objectMap [
        rml:reference "lat"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate wgs84_pos:long ;
      rr:objectMap [
        rml:reference "lon"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate sch:city ;
      rr:objectMap [
        # rr:predicateObjectMap <#PUPIN_CityMapping>;
        rr:template "http://platoon.eu/City/{city_name}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate rdfs:label ;
      rr:objectMap [
        rml:reference "city_name";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:country ;
      rr:objectMap [
        rr:template "http://platoon.eu/Country/{country_code}"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:timeZone ;
      rr:objectMap [
        rr:template "http://platoon.eu/TimeZone/{timezone}";
      ]
    ].

<#PUPIN_TimeZoneMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "daily_weather_forecasts"
    ];

    rr:subjectMap [
      rr:template "http://platoon.eu/TimeZone/{timezone}";
      rr:class time:TimeZone
    ];

    rr:predicateObjectMap [
      rr:predicate rdfs:label ;
      rr:objectMap [
        rml:reference "timezone"
      ]
    ].

<#PUPIN_CityMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "daily_weather_forecasts"
    ];

    rr:subjectMap [
      rr:template "http://platoon.eu/City/{city_name}";
      rr:class sch:City, gn:Feature
    ];

    rr:predicateObjectMap [
      rr:predicate rdfs:label ;
      rr:objectMap [
        rml:reference "city_name"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate sch:name ;
      rr:objectMap [
        rml:reference "city_name"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate sch:stateCode ;
      rr:objectMap [
        rml:reference "state_code"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:timeZone ;
      rr:objectMap [
        rr:template "http://platoon.eu/TimeZone/{timezone}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate sch:country ;
      rr:objectMap [
        rr:template "http://platoon.eu/Country/{country_code}" 
      ]
    ].

<#PUPIN_CountryMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "country"
    ];

    rr:subjectMap [
      rr:template "http://platoon.eu/Country/{country_code}";
      rr:class sch:Country
    ];

    rr:predicateObjectMap [
      rr:predicate sch:countryCode;
      rr:objectMap [
        rml:reference "country_code"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate sch:name;
      rr:objectMap [
        rml:reference "country_name"
      ]
    ];

     rr:predicateObjectMap [
      rr:predicate rdfs:label ;
      rr:objectMap [
        rml:reference  "country_name"
      ]
    ].

<#WeatherBit_TemporalContextMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/TemporalContext/{datetime}";
      rr:class time:TemporalEntity, time:Instant
    ];

    rr:predicateObjectMap [
      rr:predicate time:inXSDDateTimeStamp;
      rr:objectMap [
        rml:reference "datetime";
        rr:datatype xsd:dateTime
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate time:inDateTime;
      rr:objectMap [
        rr:template "http://platoon.eu/Pilot2A/Weatherbit/{lat}_{lon}/DailyForecast";
        rr:termType rr:IRI
      ]
    ].    

<#PUPIN_TemporalContextDailyUnitTypeMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "hourly_weather_forecasts"
    ];

    rr:subjectMap [
      rr:template "http://platoon.eu/Pilot2A/Weatherbit/{lat}_{lon}/DailyForecast";
      rr:class time:DateTimeDescription
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:timeZone ;
      rr:objectMap [
        rr:template "http://platoon.eu/TimeZone/{timezone}";
        rr:termType rr:IRI
      ]
    ].

##################################################
########## Feature Of Interest to Property########
##################################################

<#PUPIN_FeatureOfInterestMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "daily_weather_forecasts"
    ];

    rr:subjectMap [
      rr:template "http://platoon.eu/Location/{lat}_{lon}";
      rr:class seas:FeatureOfInterest, gn:Feature
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedAirTemperature;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedHighAirTemperature;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedLowAirTemperature;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMaxAirTemperature;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMinAirTemperature;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMaxFeelslikeAirTemperature;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxOutdoorAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMinFeelslikeAirTemperature;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinOutdoorAirTemperatureProperty"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMaxDiffuseSolarRadiation;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxDiffuseSolarRadiationProperty";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedRelativeHumidity;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfRelativeHumidityProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedWindDirection;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindDirectionProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedWindSpeed;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindSpeedProperty";
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedWindGustSpeed;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindGustSpeedProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedUVIndex;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfUVIndexProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedPressure;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfPressureProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedDewPointTemperature;
      rr:objectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfDewPointProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedCloudCoverage;
      rr:objectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfCloudCoverageProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedHighLevelCloudCoverage;
      rr:objectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighLevelCloudProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedLowLevelCloudCoverage;
      rr:objectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowLevelCloudProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMidLevelCloudCoverage;
      rr:objectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMidLevelCloudProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedSeaLevelPressure;
      rr:objectMap [
      	rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSeaLevelPressureProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedAccumulatedSnowFall;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedSnowFallProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedSnowDepth;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSnowDepthProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedAccumulatedPrecipitation;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedPrecipitationProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedProbabilityOfPrecipitation;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfProbabilityOfPrecipitationProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedVisibility;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfVisibilityProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedAverageOzone;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAverageOzoneProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedSunrise;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunriseProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedSunset;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunsetProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMoonrise;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonriseProperty";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:hasForecastedMoonset;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonsetProperty";
      ]
    ].


################################################
######### AirTemperature Forecast ###########
#################################################
<#WeatherBit_ForecastedTemperatureMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAirTemperatureProperty";
      rr:class plt:ForecastOfAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAirTemperatureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [         
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    


################################################
######### High AirTemperature Forecast ###########
#################################################
<#WeatherBit_ForecastedHighTemperatureMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"

    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighAirTemperatureProperty";
      rr:class plt:ForecastOfHighAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighAirTemperatureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedHighAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfHighAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "high_temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    


################################################
######### Low AirTemperature Forecast ###########
#################################################
<#WeatherBit_ForecastedLowTemperatureMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowAirTemperatureProperty";
      rr:class plt:ForecastOfLowAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowAirTemperatureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedLowAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfLowAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [         
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "low_temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    


################################################
######### Max AirTemperature Forecast ###########
#################################################
<#WeatherBit_ForecastedMaxTemperatureMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxAirTemperatureProperty";
      rr:class plt:ForecastOfMaxAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxAirTemperatureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedMaxAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfMaxAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "max_temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    


################################################
######### Min AirTemperature Forecast ###########
#################################################
<#WeatherBit_ForecastedMinTemperatureMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinAirTemperatureProperty";
      rr:class plt:ForecastOfMinAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinAirTemperatureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedMinAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"    
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfMinAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "min_temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    


##################################################################
#########   Max Feels like AirTemperaure Property Forecast ###########
#################################################################

<#WeatherBit_ForecastedMaxOutdoorAirTemperaturePropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxOutdoorAirTemperatureProperty";
      rr:class plt:ForecastOfMaxAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxOutdoorAirTemperatureEvaluation/{datetime}";
      ]
    ].    

<#WeatherBit_ForecastedMaxOutdoorAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxOutdoorAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfMaxAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";       
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "app_max_temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    


##################################################################
#########   Min Feels like AirTemperaure Property Forecast ###########
#################################################################

<#WeatherBit_ForecastedMinOutdoorAirTemperaturePropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinOutdoorAirTemperatureProperty";
      rr:class plt:ForecastOfMaxAirTemperatureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinOutdoorAirTemperatureEvaluation/{datetime}";
      ]
    ].    

<#WeatherBit_ForecastedMinOutdoorAirTemperatureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMinOutdoorAirTemperatureEvaluation/{datetime}";
      rr:class plt:ForecastOfMinAirTemperatureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [         
        rr:template "http://platoon.eu/TemporalContext/{datetime}";       
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "app_min_temp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].    

##################################################
#########   Pressure Property Forecasts ##########
##################################################

<#WeatherBit_ForecastedPressurePropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfPressureProperty";
      rr:class seas:ForecastOfPressureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfPressureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedPressureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfPressureEvaluation/{datetime}";
      rr:class seas:ForecastOfPressureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "pres";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:MilliBAR;
        rr:termType rr:IRI
      ]
    ].    

##################################################################
#########   DewPoint Property Forecasts ###########
#################################################################

<#WeatherBit_ForecastedDewPointPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfDewPointProperty";
      rr:class plt:ForecastOfDewPointProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfDewPointEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedDewPointEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfDewPointEvaluation/{datetime}";
      rr:class plt:ForecastOfDewPointEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [         
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "dewpt";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG_C;
        rr:termType rr:IRI
      ]
    ].   

##################################################################
#########   Cloud Coverage Property Forecasts ###########
#################################################################

<#WeatherBit_ForecastedCloudCoveragePropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfCloudCoverageProperty";
      rr:class plt:ForecastOfCloudCoverageProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];


    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfCloudEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedCloudEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfCloudEvaluation/{datetime}";
      rr:class plt:ForecastOfCloudEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "clouds";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:PERCENT;
        rr:termType rr:IRI
      ]
    ].   


##################################################################
#########  High-level Cloud Coverage Property Forecasts ###########
#################################################################

<#WeatherBit_ForecastedHighLevelCloudPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighLevelCloudProperty";
      rr:class plt:ForecastOfHighLevelCloudProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighLevelCloudEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedHighLevelCloudEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfHighLevelCloudEvaluation/{datetime}";
      rr:class plt:ForecastOfHighLevelCloudEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "clouds_hi";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:PERCENT;
        rr:termType rr:IRI
      ]
    ].   



##################################################################
#########  Low-level Cloud Coverage Property Forecasts ###########
#################################################################

<#WeatherBit_ForecastedLowLevelCloudPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowLevelCloudProperty";
      rr:class plt:ForecastOfLowLevelCloudProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowLevelCloudEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedLowLevelCloudEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfLowLevelCloudEvaluation/{datetime}";
      rr:class plt:ForecastOfLowLevelCloudEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "clouds_low";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:PERCENT;
        rr:termType rr:IRI
      ]
    ].   


##################################################################
#########  Mid-level Cloud Coverage Property Forecasts ###########
#################################################################

<#WeatherBit_ForecastedMidLevelCloudPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMidLevelCloudProperty";
      rr:class plt:ForecastOfMidLevelCloudProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMidLevelCloudEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedMidLevelCloudEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMidLevelCloudEvaluation/{datetime}";
      rr:class plt:ForecastOfMidLevelCloudEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "clouds_mid";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:PERCENT;
        rr:termType rr:IRI
      ]
    ].

##################################################################
#########   Sea Level Pressure Forecasts ###########
#################################################################

<#WeatherBit_ForecastedSeaLevelPressurePropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSeaLevelPressureProperty";
      rr:class plt:ForecastOfSeaLevelPressureProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSeaLevelPressureEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedSeaLevelPressureEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSeaLevelPressureEvaluation/{datetime}";
      rr:class plt:ForecastOfSeaLevelPressureEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "slp";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:MilliBAR;
        rr:termType rr:IRI
      ]
    ].   

################################################
######### DiffuseSolarRadiation Forecast #######
#################################################

<#WeatherBit_ForecastedDiffuseSolarRadiationPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxDiffuseSolarRadiationProperty";
      rr:class plt:ForecastOfMaxDiffuseSolarRadiationProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];


    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxDiffuseSolarRadiationEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedDiffuseSolarRadiationEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMaxDiffuseSolarRadiationEvaluation/{datetime}";
      rr:class plt:ForecastOfMaxDiffuseSolarRadiationEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";         
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "max_dhi";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:W-PER-M2;
        rr:termType rr:IRI
      ]
    ].    

################################################
#########  RelativeHumidityProperty Forecasts#######
#################################################

<#WeatherBit_ForecastedRelativeHumidityPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfRelativeHumidityProperty";
      rr:class plt:ForecastOfRelativeHumidityProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfRelativeHumidityEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedRelativeHumidityEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfRelativeHumidityEvaluation/{datetime}";
      rr:class plt:ForecastOfRelativeHumidityEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";        
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "rh";
        rr:datatype xsd:double
      ]
    ];


    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:PERCENT;
        rr:termType rr:IRI
      ]
    ].    


################################################
#########   WindDirectionProperty Forecasts#######
#################################################

<#WeatherBit_ForecastedWindDirectionPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindDirectionProperty";
      rr:class seas:ForecastOfWindDirectionProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];


    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindDirectionEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedWindDirectionEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
    rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindDirectionEvaluation/{datetime}";
      rr:class seas:ForecastOfWindDirectionEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [         
        rr:template "http://platoon.eu/TemporalContext/{city_name}";       
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "wind_dir";
        rr:datatype xsd:int
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:direction;
      rr:objectMap [
        rml:reference "wind_cdir_full"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:directionAbbr;
      rr:objectMap [
        rml:reference "wind_cdir"
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:DEG;
        rr:termType rr:IRI
      ]
    ]
    .    


################################################
#########   WindSpeedProperty Forecast  ########
#################################################

<#WeatherBit_ForecastedWindSpeedPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindSpeedProperty";
      rr:class seas:ForecastOfWindSpeedProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindSpeedEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedWindSpeedEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindSpeedEvaluation/{datetime}";
      rr:class seas:ForecastOfWindSpeedEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "wind_spd";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:M-PER-SEC;
        rr:termType rr:IRI
      ]
    ]
    .    

################################################
#########   WindGustSpeedProperty Forecast  ########
#################################################

<#WeatherBit_ForecastedWindGustSpeedPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindGustSpeedProperty";
      rr:class seas:ForecastOfWindGustSpeedProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindGustSpeedEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedWindGustSpeedEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfWindGustSpeedEvaluation/{datetime}";
      rr:class seas:ForecastOfWindGustSpeedEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [         
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "wind_gust_spd";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:M-PER-SEC;
        rr:termType rr:IRI
      ]
    ].    


################################################
#########    UVIndexProperty Forecasts#######
#################################################

<#WeatherBit_ForecastedUVIndexPropertyMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfUVIndexProperty";
      rr:class plt:ForecastOfUVIndexProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfUVIndexEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedUVIndexEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfUVIndexEvaluation/{datetime}";
      rr:class plt:ForecastOfUVIndexEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";    
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "uv";
        rr:datatype xsd:double
      ]
    ].    

################################################
######### Accumulated SnowFall Forecast ###########
#################################################
<#WeatherBit_ForecastedAccumulatedSnowMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedSnowFallProperty";
      rr:class plt:ForecastOfAccumulatedSnowFallProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedSnowFallEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedAccumulatedSnowFallEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedSnowFallEvaluation/{datetime}";
      rr:class plt:ForecastOfAccumulatedSnowFallEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "snow";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:MilliM;
        rr:termType rr:IRI
      ]
    ].    


################################################
######### SnowDepth Forecast ###########
#################################################
<#WeatherBit_ForecastedSnowDepthMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSnowDepthProperty";
      rr:class plt:ForecastOfSnowDepthProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSnowDepthEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedSnowDepthEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSnowDepthEvaluation/{datetime}";
      rr:class plt:ForecastOfSnowDepthEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "snow_depth";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:MilliM;
        rr:termType rr:IRI
      ]
    ].    

###########################################################
######### Probability Of Precipitation Forecast ###########
###########################################################
<#WeatherBit_ForecastedProbabilityOfPrecipitationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfProbabilityOfPrecipitationProperty";
      rr:class plt:ForecastOfProbabilityOfPrecipitationProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
      rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfProbabilityOfPrecipitationEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedProbabilityOfPrecipitationEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfProbabilityOfPrecipitationEvaluation/{datetime}";
      rr:class plt:ForecastOfProbabilityOfPrecipitationEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "pop";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:PERCENT;
        rr:termType rr:IRI
      ]
    ].    

################################################
######### AccumulatedPrecipitation Forecast ###########
#################################################
<#WeatherBit_ForecastedAccumulatedPrecipitationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedPrecipitationProperty";
      rr:class plt:ForecastOfAccumulatedPrecipitationProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedPrecipitationEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedAccumulatedPrecipitationEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAccumulatedPrecipitationEvaluation/{datetime}";
      rr:class plt:ForecastOfAccumulatedPrecipitationEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "precip";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:MilliM;
        rr:termType rr:IRI
      ]
    ].    


#################################################
######### AverageOzone Forecast #################
#################################################
<#WeatherBit_ForecastedAverageOzoneMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAverageOzoneProperty";
      rr:class plt:ForecastOfAverageOzoneProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAverageOzoneEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedAverageOzoneEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
    
    rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfAverageOzoneEvaluation/{datetime}";
      rr:class plt:ForecastOfAverageOzoneEvaluation
    ];

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "ozone";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant plt:DobsonUnit;
        rr:termType rr:IRI
      ]
    ].    


################################################
######### Visibility Forecast ###########
#################################################
<#WeatherBit_ForecastedVisibilityMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfVisibilityProperty";
      rr:class plt:ForecastOfVisibilityProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfVisibilityEvaluation/{datetime}";
      ]
    ].    


<#WeatherBit_ForecastedVisibilityEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfVisibilityEvaluation/{datetime}";
      rr:class plt:ForecastOfVisibilityEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "vis";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:KiloM;
        rr:termType rr:IRI
      ]
    ].    

######################################
######### Sunrise Forecast ###########
######################################
<#WeatherBit_ForecastedSunriseMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunriseProperty";
      rr:class plt:ForecastOfSunriseProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunriseEvaluation/{datetime}";
      ]
    ].    

<#WeatherBit_ForecastedSunriseEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
    rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunriseEvaluation/{datetime}";
      rr:class plt:ForecastOfSunriseEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "sunrise_ts";
        rr:datatype xsd:time
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:unitHour;
        rr:termType rr:IRI
      ]
    ].    

################################################
######### Sunset Forecast ###########
#################################################
<#WeatherBit_ForecastedSunsetMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
    rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunsetProperty";
      rr:class plt:ForecastOfSunsetProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunsetEvaluation/{datetime}";
      ]
    ].    

<#WeatherBit_ForecastedSunsetEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfSunsetEvaluation/{datetime}";
      rr:class plt:ForecastOfSunsetEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [        
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "sunset_ts";
        rr:datatype xsd:time
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:unitHour;
        rr:termType rr:IRI
      ]
    ].    

################################################
######### Moonrise Forecast ###########
#################################################
<#WeatherBit_ForecastedMoonriseMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonriseProperty";
      rr:class plt:ForecastOfMoonriseProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];
    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonriseEvaluation/{datetime}";
      ]
    ].    

<#WeatherBit_ForecastedMoonriseEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
    rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonriseEvaluation/{datetime}";
      rr:class plt:ForecastOfMoonriseEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "moonrise_ts";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:unitHour;
        rr:termType rr:IRI
      ]
    ].    

######################################
######### Moonset Forecast ###########
######################################
<#WeatherBit_ForecastedMoonsetMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonsetProperty";
      rr:class plt:ForecastOfMoonsetProperty, seas:Forecast
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:isPropertyOf ;
      rr:objectMap [
        rr:template "http://platoon.eu/Location/{lat}_{lon}";
      ]
    ];
    
    rr:predicateObjectMap [
      rr:predicate  plt:datasource;
      rr:objectMap [
        rr:constant "http://platoon.eu/DataSource/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:unitType ;
      rr:objectMap [
        rr:constant time:unitDay;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate plt:forecastedBy ;
      rr:objectMap [
        rr:constant "http://platoon.eu/ForecastService/WeatherBit";
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate  seas:evaluation ;
      rr:objectMap [
        rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonsetEvaluation/{datetime}";
      ]
    ].    

<#WeatherBit_ForecastedMoonsetEvaluationMapping> a rr:TriplesMap;
    rml:logicalSource [
      rml:source <#PLATOON_DB>;
      rr:sqlVersion rr:SQL2008;
      rr:tableName "weatherbit_daily_weather_forecast"
    ];
  
     rr:subjectMap [
      rr:template "http://platoon.eu/WeatherBit/DailyForecast/{lat}_{lon}_{city_name}/ForecastOfMoonsetEvaluation/{datetime}";
      rr:class plt:ForecastOfMoonsetEvaluation
    ];
    
    rr:predicateObjectMap [
      rr:predicate rdfs:description;
      rr:objectMap [
        rml:reference "weather_description";
      ]
    ] ;

    rr:predicateObjectMap [
      rr:predicate seas:hasTemporalContext ;
      rr:objectMap [       
        rr:template "http://platoon.eu/TemporalContext/{datetime}";
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate seas:evaluatedSimpleValue ;
      rr:objectMap [
        rml:reference "moonset_ts";
        rr:datatype xsd:double
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate qudt:unit;
      rr:objectMap [
        rr:constant unit:unitHour;
        rr:termType rr:IRI
      ]
    ];

    rr:predicateObjectMap [
      rr:predicate time:hasTRS;
      rr:objectMap [
        rr:constant <http://dbpedia.org/resource/Unix_time>;
        rr:termType rr:IRI
      ]
    ].    

